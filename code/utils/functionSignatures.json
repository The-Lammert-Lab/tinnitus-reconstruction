{
    "parse_config": {
        "inputs": [
            {
                "name": "config_file",
                "kind": "ordered",
                "repeating": false,
                "type": [
                    "file=*.yaml"
                ],
                "purpose": "File path to configuration file"
            },
            {
                "name": "legacy",
                "kind": "ordered",
                "repeating": false,
                "type": "logical",
                "purpose": "If true, use ``ReadYaml`` to parse config, else ``yaml.loadFile``."
            },
            {
                "name": "verbose",
                "kind": "ordered",
                "repeating": false,
                "type": [
                    "logical"
                ],
                "purpose": "If true, print more informational text."
            }
        ]
    },
    "get_reconstruction": {
        "inputs": [
            {
                "name": "config_file",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "file=*.yaml"
                ],
                "purpose": "File path to configuration file"
            },
            {
                "name": "config",
                "kind": "namevalue",
                "repeating": false,
                "type": "struct",
                "purpose": "Struct containing configuration information"
            },
            {
                "name": "preprocessing",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "cell"
                ],
                "purpose": "Cell array of preprocessing directives"
            },
            {
                "name": "method",
                "kind": "namevalue",
                "repeating": false,
                "type": "choices={'cs','cs_nb','linear'}",
                "purpose": "Character array of which method to use to reconstruct the signal"
            },
            {
                "name": "verbose",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "logical",
                    "scalar"
                ],
                "purpose": "If true, print more informational text."
            },
            {
                "name": "fraction",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "numeric",
                    "scalar",
                    "real",
                    "positive",
                    "<=1"
                ],
                "purpose": "What fraction of the data to use"
            },
            {
                "name": "data_dir",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "folder"
                ],
                "purpose": "File path to data directory"
            },
            {
                "name": "legacy",
                "kind": "namevalue",
                "repeating": false,
                "type": "logical",
                "purpose": "If true, use ``ReadYaml`` to parse config, else ``yaml.loadFile``."
            }
        ]
    },
    "collect_data": {
        "inputs": [
            {
                "name": "config_file",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "file=*.yaml"
                ],
                "purpose": "File path to configuration file"
            },
            {
                "name": "config",
                "kind": "namevalue",
                "repeating": false,
                "type": "struct",
                "purpose": "Struct containing configuration information"
            },
            {
                "name": "verbose",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "logical",
                    "scalar"
                ],
                "purpose": "If true, print more informational text."
            },
            {
                "name": "data_dir",
                "kind": "namevalue",
                "repeating": false,
                "type": [
                    "file=*.yaml"
                ],
                "purpose": "File path to data directory"
            }
        ]
    },
    "create_files_and_stimuli": {
        "inputs": [
            {
                "name": "config",
                "kind": "namevalue",
                "repeating": false,
                "type": "struct",
                "purpose": "Struct containing configuration information"
            },
            {
                "name": "stimuli_object",
                "kind": "namevalue",
                "repeating": false,
                "type": "AbstractStimulusGenerationMethod",
                "purpose": "Object defining stimulus generation method"
            },
            {
                "name": "hash_prefix",
                "kind": "namevalue",
                "repeating": false,
                "type": "char",
                "purpose": "8-element MD5 hash of config"
            }
        ]
    },
    "update_hashes": {
        "inputs": [
            {
                "name": "old_hash",
                "kind": "required",
                "repeating": false,
                "type": "char",
                "purpose": "The new hash to change old hashes to"
            },
            {
                "name": "old_hash",
                "kind": "required",
                "type": "char",
                "purpose": "The old hash to change to the new hash"
            },
            {
                "name": "data_dir",
                "kind": "required",
                "repeating": false,
                "type": "folder",
                "purpose": "Path to directory where data files should be munged."
            },
            {
                "name": "verbose",
                "kind": "ordered",
                "repeating": false,
                "type": "logical",
                "purpose": "If true, print more informational text."
            }
        ]
    },
    "munge_hashes": {
        "inputs": [
            {
                "name": "file_string",
                "kind": "namevalue",
                "type": [
                    "char",
                    "string"
                ],
                "purpose": "Pattern of config files to match and munge."
            },
            {
                "name": "legacy_flag",
                "kind": "namevalue",
                "type": "logical",
                "purpose": "If true, use ``ReadYaml`` to parse config, else ``yaml.loadFile``."
            },
            {
                "name": "verbose",
                "kind": "namevalue",
                "type": "logical",
                "purpose": "If true, print more informational text."
            },
            {
                "name": "data_dir",
                "kind": "namevalue",
                "type": [
                    "folder"
                ],
                "purpose": "Path to directory where data files should be munged."
            }
        ]
    },
    "plot_reconstructions": {
        "inputs": [
            {
                "name": "T",
                "kind": "required",
                "type": "table",
                "purpose": "Data table containing the reconstructions to plot."
            },
            {
                "name": "binned_target_signal",
                "kind": "required",
                "type": [
                    "numeric",
                    "real",
                    "2d"
                ],
                "purpose": "Matrix containing the target signals."
            },
            {
                "name": "data_names",
                "kind": "required",
                "type": [
                    "cell",
                    "@() mustBeText"
                ],
                "purpose": "List of target signal names, e.g., 'buzzing'"
            },
            {
                "name": "figure",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "matlab.ui.Figure"
                ],
                "purpose": "Figure handle, defaults to ``[]``."
            },
            {
                "name": "publish",
                "kind": "namevalue",
                "type": [
                    "logical",
                    "scalar"
                ],
                "purpose": "Whether to perform post-processing to de-identify and make figure fonts larger."
            },
            {
                "name": "alpha",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "real",
                    ">=0",
                    "<=1"
                ],
                "purpose": "Transparency value between 0 and 1."
            },
            {
                "name": "resynth",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "logical"
                ],
                "purpose": "Whether this is plotting resynthesis data."
            },
            {
                "name": "two_afc",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "logical"
                ],
                "purpose": "Whether this is plotting 2-afc data."
            },
            {
                "name": "colormap",
                "kind": "namevalue",
                "type": "function_handle",
                "purpose": "Function handle to a colormap."
            },
            {
                "name": "cs",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "logical"
                ],
                "purpose": "Whether to plot compressed sensing reconstructions."
            },
            {
                "name": "lr",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "logical"
                ],
                "purpose": "Whether to plot linear regression reconstructions."
            },
            {
                "name": "baseline",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "logical"
                ],
                "purpose": "Whether to plot baseline (random) reconstructions."
            },
            {
                "name": "synthetic",
                "kind": "namevalue",
                "type": [
                    "scalar",
                    "logical"
                ],
                "purpose": "Whether to plot synthetic reconstructions."
            }
        ]
    }
}